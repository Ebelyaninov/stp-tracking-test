openapi: 3.0.3

info:
  title: Tinkoff Investments Tracking administrative API
  description: Tracking admin API
  contact:
    name: Vyacheslav Klapatnyuk
    email: v.klapatnyuk@tinkoff.ru
  version: 1.2.1

servers:
  - url: http://tracking-admin.dev2.k8s.tcsbank.ru/tracking/admin/v1/
    description: тестовый стенд
  - url: http://trading.tinkoff.local
    description: боевой стенд

tags:
  - name: client
    description: Клиент
  - name: strategy
    description: Торговая стратегия
  - name: exchange-position
    description: Торговая позиция на бирже

paths:

  /client/{clientId}/master/confirm:

    parameters:
      - $ref: '#/components/parameters/ApplicationName'
      - $ref: '#/components/parameters/ApplicationVersion'
      - $ref: '#/components/parameters/Platform'
      - $ref: '#/components/parameters/DeviceId'
      - $ref: '#/components/parameters/Login'
      - $ref: '#/components/parameters/B3TraceId'
      - $ref: '#/components/parameters/B3SpanId'
      - $ref: '#/components/parameters/B3ParentSpanId'
      - $ref: '#/components/parameters/B3Sampled'

    post:
      tags:
        - client
      summary: confirmMasterClient
      description: Подтверждает право участия клиента {clientId} в роли master
      operationId: confirmMasterClient
      security:
        - apiKey: [ ]
      parameters:
        - $ref: '#/components/parameters/ClientId'
      responses:
        200:
          description: OK
          headers:
            x-trace-id:
              $ref: '#/components/headers/XTraceId'
            x-server-time:
              $ref: '#/components/headers/XServerTime'
        400:
          $ref: '#/components/responses/Error'
        401:
          description: Unauthorized
        422:
          $ref: '#/components/responses/Error'
        500:
          $ref: '#/components/responses/Error'

  /client/master:

    parameters:
      - $ref: '#/components/parameters/ApplicationName'
      - $ref: '#/components/parameters/ApplicationVersion'
      - $ref: '#/components/parameters/Platform'
      - $ref: '#/components/parameters/DeviceId'
      - $ref: '#/components/parameters/Login'
      - $ref: '#/components/parameters/B3TraceId'
      - $ref: '#/components/parameters/B3SpanId'
      - $ref: '#/components/parameters/B3ParentSpanId'
      - $ref: '#/components/parameters/B3Sampled'

    get:
      tags:
        - client
      summary: getMasterClients
      description: Возвращает список клиентов, участвующих в автоследовании в роли master
      operationId: getMasterClients
      security:
        - apiKey: [ ]
      parameters:
        - $ref: '#/components/parameters/Cursor'
        - $ref: '#/components/parameters/Limit'
      responses:
        200:
          description: OK
          headers:
            x-trace-id:
              $ref: '#/components/headers/XTraceId'
            x-server-time:
              $ref: '#/components/headers/XServerTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMasterClientsResponse'
        400:
          $ref: '#/components/responses/Error'
        401:
          description: Unauthorized
        500:
          $ref: '#/components/responses/Error'

  /strategy/{strategyId}:

    parameters:
      - $ref: '#/components/parameters/ApplicationName'
      - $ref: '#/components/parameters/ApplicationVersion'
      - $ref: '#/components/parameters/Platform'
      - $ref: '#/components/parameters/DeviceId'
      - $ref: '#/components/parameters/StrategyId'
      - $ref: '#/components/parameters/B3TraceId'
      - $ref: '#/components/parameters/B3SpanId'
      - $ref: '#/components/parameters/B3ParentSpanId'
      - $ref: '#/components/parameters/B3Sampled'

    get:
      tags:
        - strategy
      summary: getStrategy
      description: Возвращает торговую стратегию {strategyId}
      operationId: getStrategy
      security:
        - apiKey: [ ]
      responses:
        200:
          description: OK
          headers:
            x-trace-id:
              $ref: '#/components/headers/XTraceId'
            x-server-time:
              $ref: '#/components/headers/XServerTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStrategyResponse'
        400:
          $ref: '#/components/responses/Error'
        401:
          description: Unauthorized
        422:
          $ref: '#/components/responses/Error'
        500:
          $ref: '#/components/responses/Error'

    patch:
      tags:
        - strategy
      summary: updateStrategy
      description: Обновляет торговую стратегию {strategyId}
      operationId: updateStrategy
      security:
        - apiKey: [ ]
      parameters:
        - $ref: '#/components/parameters/Login'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStrategyRequest'
      responses:
        200:
          description: OK
          headers:
            x-trace-id:
              $ref: '#/components/headers/XTraceId'
            x-server-time:
              $ref: '#/components/headers/XServerTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateStrategyResponse'
        400:
          $ref: '#/components/responses/Error'
        401:
          description: Unauthorized
        422:
          $ref: '#/components/responses/Error'
        500:
          $ref: '#/components/responses/Error'

  /strategy/{strategyId}/status/active:

    parameters:
      - $ref: '#/components/parameters/ApplicationName'
      - $ref: '#/components/parameters/ApplicationVersion'
      - $ref: '#/components/parameters/Platform'
      - $ref: '#/components/parameters/DeviceId'
      - $ref: '#/components/parameters/Login'
      - $ref: '#/components/parameters/B3TraceId'
      - $ref: '#/components/parameters/B3SpanId'
      - $ref: '#/components/parameters/B3ParentSpanId'
      - $ref: '#/components/parameters/B3Sampled'

    post:
      tags:
        - strategy
      summary: activateStrategy
      description: Активирует торговую стратегию {strategyId}
      operationId: activateStrategy
      security:
        - apiKey: [ ]
      parameters:
        - $ref: '#/components/parameters/StrategyId'
      responses:
        200:
          description: OK
          headers:
            x-trace-id:
              $ref: '#/components/headers/XTraceId'
            x-server-time:
              $ref: '#/components/headers/XServerTime'
        400:
          $ref: '#/components/responses/Error'
        401:
          description: Unauthorized
        422:
          $ref: '#/components/responses/Error'
        500:
          $ref: '#/components/responses/Error'

  /strategy:

    parameters:
      - $ref: '#/components/parameters/ApplicationName'
      - $ref: '#/components/parameters/ApplicationVersion'
      - $ref: '#/components/parameters/Platform'
      - $ref: '#/components/parameters/DeviceId'
      - $ref: '#/components/parameters/Login'
      - $ref: '#/components/parameters/B3TraceId'
      - $ref: '#/components/parameters/B3SpanId'
      - $ref: '#/components/parameters/B3ParentSpanId'
      - $ref: '#/components/parameters/B3Sampled'

    get:
      tags:
        - strategy
      summary: getStrategies
      description: Возвращает список торговых стратегий
      operationId: getStrategies
      security:
        - apiKey: [ ]
      parameters:
        - $ref: '#/components/parameters/Cursor'
        - $ref: '#/components/parameters/Limit'
      responses:
        200:
          description: OK
          headers:
            x-trace-id:
              $ref: '#/components/headers/XTraceId'
            x-server-time:
              $ref: '#/components/headers/XServerTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStrategiesResponse'
        400:
          $ref: '#/components/responses/Error'
        401:
          description: Unauthorized
        500:
          $ref: '#/components/responses/Error'

  /exchange-position:

    parameters:
      - $ref: '#/components/parameters/ApplicationName'
      - $ref: '#/components/parameters/ApplicationVersion'
      - $ref: '#/components/parameters/Platform'
      - $ref: '#/components/parameters/DeviceId'
      - $ref: '#/components/parameters/Login'
      - $ref: '#/components/parameters/B3TraceId'
      - $ref: '#/components/parameters/B3SpanId'
      - $ref: '#/components/parameters/B3ParentSpanId'
      - $ref: '#/components/parameters/B3Sampled'

    post:
      tags:
        - exchange-position
      summary: createExchangePosition
      description: Создаёт торговую биржевую позицию
      operationId: createExchangePosition
      security:
        - apiKey: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExchangePositionRequest'
      responses:
        200:
          description: OK
          headers:
            x-trace-id:
              $ref: '#/components/headers/XTraceId'
            x-server-time:
              $ref: '#/components/headers/XServerTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateExchangePositionResponse'
        400:
          $ref: '#/components/responses/Error'
        401:
          description: Unauthorized
        422:
          $ref: '#/components/responses/Error'
        500:
          $ref: '#/components/responses/Error'

    patch:
      tags:
        - exchange-position
      summary: updateExchangePosition
      description: Обновляет торговую биржевую позицию
      operationId: updateExchangePosition
      security:
        - apiKey: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateExchangePositionRequest'
      responses:
        200:
          description: OK
          headers:
            x-trace-id:
              $ref: '#/components/headers/XTraceId'
            x-server-time:
              $ref: '#/components/headers/XServerTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateExchangePositionResponse'
        400:
          $ref: '#/components/responses/Error'
        401:
          description: Unauthorized
        422:
          $ref: '#/components/responses/Error'
        500:
          $ref: '#/components/responses/Error'

    get:
      tags:
        - exchange-position
      summary: getExchangePositions
      description: Возвращает торговые биржевые позиции, добавленные в автоследование
      operationId: getExchangePositions
      security:
        - apiKey: [ ]
      parameters:
        - $ref: '#/components/parameters/Cursor'
        - $ref: '#/components/parameters/Limit'
      responses:
        200:
          description: OK
          headers:
            x-trace-id:
              $ref: '#/components/headers/XTraceId'
            x-server-time:
              $ref: '#/components/headers/XServerTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetExchangePositionsResponse'
        400:
          $ref: '#/components/responses/Error'
        401:
          description: Unauthorized
        500:
          $ref: '#/components/responses/Error'

components:

  securitySchemes:

    apiKey:
      type: apiKey
      in: header
      name: X-API-KEY

  headers:

    XTraceId:
      description: Идентификатор ответа
      schema:
        type: string
        minLength: 1
      required: true

    XServerTime:
      description: Метка времени формирования ответа
      schema:
        type: string
        format: date-time
      required: true

  parameters:

    ApplicationName:
      description: Название вызывающего приложения
      name: x-app-name
      in: header
      required: true
      schema:
        type: string
        minLength: 1
      example: investing

    ApplicationVersion:
      description: Версия вызывающего приложения
      name: x-app-version
      in: header
      required: false
      schema:
        type: string
        minLength: 1
      example: 5.0.0

    Platform:
      description: 'Платформа: "ios", "android", другое'
      name: x-platform
      in: header
      required: false
      schema:
        type: string
        minLength: 1
      example: android

    DeviceId:
      description: Идентификатор устройства
      name: x-device-id
      in: header
      required: false
      schema:
        type: string
        minLength: 1

    Login:
      name: x-tcs-login
      in: header
      required: true
      description: Логин авторизованного пользователя
      schema:
        type: string
        minLength: 1
        maxLength: 20
      example: v.klapatnyuk

    ClientId:
      description: Единый идентификатор клиента
      name: clientId
      in: path
      required: true
      schema:
        type: string
        format: uuid
      example: 397aee00-f163-4eff-a7a6-a4bc11118776

    StrategyId:
      description: Идентификатор торговой стратегии
      name: strategyId
      in: path
      required: true
      schema:
        type: string
        format: uuid
      example: 397aee00-f163-4eff-a7a6-a4bc11118776

    Cursor:
      name: cursor
      description: Идентификатор элемента, с которого начинать выдачу результатов при формировании ответа
      in: query
      required: false
      schema:
        type: string
        minLength: 1

    Limit:
      name: limit
      description: Ограничение "сверху" на количество возвращаемых элементов данных
      in: query
      required: false
      schema:
        type: integer
        minimum: 1

    B3TraceId:
      description: Общий идентификатор трассировки
      name: x-b3-traceid
      in: header
      required: false
      schema:
        type: string
        pattern: '^[a-f0-9]{16}$|^[a-f0-9]{32}$'
      example: 5b23a9529c0f48bc5b23a9529c0f48bc

    B3SpanId:
      description: Позиция текущей операции в общем дереве трассировки
      name: x-b3-spanid
      in: header
      required: false
      schema:
        type: string
        pattern: '^[a-f0-9]{16}$'
      example: a2fb4a1d1a96d312

    B3ParentSpanId:
      description: Позиция родительской операции в общем дереве трассировки
      name: x-b3-parentspanid
      in: header
      required: false
      schema:
        type: string
        pattern: '^[a-f0-9]{16}$'
      example: a2fb4a1d1a96d312

    B3Sampled:
      description: Сэмплинг
      name: x-b3-sampled
      in: header
      required: false
      schema:
        type: integer
        minimum: 0
        maximum: 1
      example: 1

  responses:

    Error:
      description: Error
      headers:
        x-trace-id:
          $ref: '#/components/headers/XTraceId'
        x-server-time:
          $ref: '#/components/headers/XServerTime'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

  schemas:

    CreateExchangePositionRequest:
      allOf:
        - $ref: '#/components/schemas/ExchangePosition'

    CreateExchangePositionResponse:
      allOf:
        - $ref: '#/components/schemas/ExchangePosition'

    UpdateExchangePositionRequest:
      allOf:
        - $ref: '#/components/schemas/ExchangePosition'

    UpdateExchangePositionResponse:
      allOf:
        - $ref: '#/components/schemas/ExchangePosition'

    ExchangePosition:
      type: object
      required:
        - ticker
        - tradingClearingAccount
        - exchange
        - trackingAllowed
        - orderQuantityLimits
      properties:
        ticker:
          description: Тикер на бирже
          type: string
          minLength: 1
          maxLength: 12
          example: TCS
        tradingClearingAccount:
          description: Торгово-клиринговый счёт
          type: string
          minLength: 1
          maxLength: 12
          example: L01+00002F00
        exchange:
          description: Биржа (торговая площадка)
          type: string
          enum: [ MOEX, MOEX_PLUS, FX, SPB ]
        trackingAllowed:
          description: Признак разрешённой для торговли в автоследовании позиции
          type: boolean
        dailyQuantityLimit:
          description: Лимит кол-ва единиц актива в рамках одной торговой сессии (суммарно на master и его slave-портфели)
          type: integer
          minimum: 1
        orderQuantityLimits:
          description: Лимиты кол-ва единиц актива в рамках одной заявки (суммарно на master и его slave-портфели)
          type: array
          items:
            $ref: '#/components/schemas/OrderQuantityLimit'
          minItems: 1
        otcTicker:
          description: Тикер вне биржи (например, сплитованные валюты)
          type: string
          minLength: 1
          maxLength: 12
          example: USDRUB
        otcClassCode:
          description: Код класса инструмента вне биржи (например, сплитованные валюты)
          type: string
          minLength: 1
          maxLength: 10
          example: EES_CETS

    OrderQuantityLimit:
      type: object
      required:
        - periodId
        - limit
      properties:
        periodId:
          description: Идентификатор периода
          type: string
          minLength: 1
          example: additional_liquidity
        limit:
          description: Лимит кол-ва единиц актива
          type: integer
          minimum: 0

    UpdateStrategyRequest:
      type: object
      properties:
        title:
          description: Название стратегии
          type: string
          minLength: 1
          nullable: true
          example: Ракета
        description:
          description: Описание стратегии
          type: string
          minLength: 1
          nullable: true
          example: Пушка
        score:
          description: Оценка стратегии
          type: integer
          minimum: 1
          maximum: 5
          nullable: true

    UpdateStrategyResponse:
      allOf:
        - $ref: '#/components/schemas/Strategy'

    GetStrategyResponse:
      type: object
      properties:
        socialProfile:
          $ref: '#/components/schemas/SocialProfile'

    SocialProfile:
      type: object
      required:
        - id
      properties:
        id:
          description: Идентификатор социального профиля
          type: string
          format: uuid
          example: 397aee00-f163-4eff-a7a6-a4bc11118776

    GetExchangePositionsResponse:
      type: object
      required:
        - nextCursor
        - hasNext
        - items
      properties:
        nextCursor:
          description: Крайний возвращённый в текущем ответе идентификатор элемента, который необходимо использовать при следующем запросе
          type: string
          minLength: 1
          nullable: true
        hasNext:
          description: Признак наличия элементов, не вошедших в текущий ответ
          type: boolean
        items:
          type: array
          items:
            $ref: '#/components/schemas/ExchangePosition'

    GetMasterClientsResponse:
      type: object
      required:
        - nextCursor
        - hasNext
        - items
      properties:
        nextCursor:
          description: Крайний возвращённый в текущем ответе идентификатор элемента, который необходимо использовать при следующем запросе
          type: string
          minLength: 1
          nullable: true
        hasNext:
          description: Признак наличия элементов, не вошедших в текущий ответ
          type: boolean
        items:
          type: array
          items:
            $ref: '#/components/schemas/MasterClient'

    MasterClient:
      description: Клиент в роли master
      type: object
      required:
        - id
        - status
      properties:
        id:
          description: Единый идентификатор клиента
          type: string
          format: uuid
          example: 397aee00-f163-4eff-a7a6-a4bc11118776
        status:
          description: Статус клиента
          type: string
          enum: [ confirmed, registered ]
        socialProfile:
          $ref: '#/components/schemas/MasterSocialProfile'

    MasterSocialProfile:
      description: Социальный профиль ведущего в Пульсе
      type: object
      required:
        - nickname
      properties:
        nickname:
          description: Никнейм профиля
          type: string
          minLength: 1

    GetStrategiesResponse:
      type: object
      required:
        - nextCursor
        - hasNext
        - items
      properties:
        nextCursor:
          description: Крайний возвращённый в текущем ответе идентификатор элемента, который необходимо использовать при следующем запросе
          type: string
          minLength: 1
          nullable: true
        hasNext:
          description: Признак наличия элементов, не вошедших в текущий ответ
          type: boolean
        items:
          type: array
          items:
            $ref: '#/components/schemas/Strategy'

    Strategy:
      description: Торговая стратегия
      type: object
      required:
        - id
        - status
        - title
        - baseCurrency
        - riskProfile
        - description
        - owner
      properties:
        id:
          description: Идентификатор стратегии
          type: string
          format: uuid
          example: 397aee00-f163-4eff-a7a6-a4bc11118776
        status:
          description: Статус стратегии
          type: string
          enum: [ draft, active ]
        title:
          description: Название стратегии
          type: string
          minLength: 1
          example: Ракета
        baseCurrency:
          description: Базовая валюта стратегии
          type: string
          enum: [ rub, usd ]
        riskProfile:
          description: Риск-профиль стратегии
          type: string
          enum: [ conservative, moderate, aggressive ]
        description:
          description: Описание стратегии
          type: string
          minLength: 1
          example: Пушка
        score:
          description: Оценка стратегии
          type: integer
          minimum: 1
          maximum: 5
        owner:
          $ref: '#/components/schemas/StrategyOwner'

    StrategyOwner:
      description: Владелец стратегии
      type: object
      properties:
        socialProfile:
          $ref: '#/components/schemas/MasterSocialProfile'

    ErrorResponse:
      description: Ответ с ошибкой
      type: object
      required:
        - errorId
        - errorCode
        - errorMessage
      properties:
        errorId:
          description: Уникальный идентификатор ошибки
          type: string
          minLength: 16
          maxLength: 16
          example: 02d55cabb05b44f0
        errorCode:
          description: Служебный код ошибки
          type: string
          minLength: 1
          maxLength: 12
          example: 0344-01-Z99
        errorMessage:
          description: Служебное описание ошибки
          type: string
          minLength: 1
          example: Сервис временно недоступен
