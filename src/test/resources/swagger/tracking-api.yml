openapi: 3.0.3
# TODO: править пути для rate-limit'ов

info:
  title: Tinkoff Investments Tracking public API
  description: Tracking public API
  contact:
    name: Vyacheslav Klapatnyuk
    email: v.klapatnyuk@tinkoff.ru
  version: 1.18.0

tags:
  - name: contract
    description: Договор клиента
  - name: strategy
    description: Торговая стратегия
  - name: subscription
    description: Подписка на стратегию
  - name: signal
    description: Торговый сигнал
  - name: analytics
    description: Аналитика
  - name: client
    description: Клиент

paths:

  /strategy:

    parameters:
      - $ref: '#/components/parameters/ApplicationName'
      - $ref: '#/components/parameters/ApplicationVersion'
      - $ref: '#/components/parameters/Platform'
      - $ref: '#/components/parameters/DeviceId'
      - $ref: '#/components/parameters/SiebelId'
      - $ref: '#/components/parameters/B3TraceId'
      - $ref: '#/components/parameters/B3SpanId'
      - $ref: '#/components/parameters/B3ParentSpanId'
      - $ref: '#/components/parameters/B3Sampled'

    post:
      tags:
        - strategy
      summary: createStrategy
      description: Создаёт торговую стратегию от имени авторизованного клиента к договору {contractId}
      operationId: createStrategy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStrategyRequest'
      responses:
        200:
          description: OK
          headers:
            x-trace-id:
              $ref: '#/components/headers/XTraceId'
            x-server-time:
              $ref: '#/components/headers/XServerTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateStrategyResponse'
        400:
          $ref: '#/components/responses/Error'
        401:
          $ref: '#/components/responses/Error'
        422:
          $ref: '#/components/responses/Error'
        500:
          $ref: '#/components/responses/Error'

  /strategy/title/check:

    parameters:
      - $ref: '#/components/parameters/ApplicationName'
      - $ref: '#/components/parameters/ApplicationVersion'
      - $ref: '#/components/parameters/Platform'
      - $ref: '#/components/parameters/DeviceId'
      - $ref: '#/components/parameters/SiebelId'
      - $ref: '#/components/parameters/B3TraceId'
      - $ref: '#/components/parameters/B3SpanId'
      - $ref: '#/components/parameters/B3ParentSpanId'
      - $ref: '#/components/parameters/B3Sampled'

    post:
      tags:
        - strategy
      summary: checkStrategyTitle
      description: Проверяет доступность {title} для использования в качестве названия стратегии
      operationId: checkStrategyTitle
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckStrategyTitleRequest'
      responses:
        200:
          description: OK
          headers:
            x-trace-id:
              $ref: '#/components/headers/XTraceId'
            x-server-time:
              $ref: '#/components/headers/XServerTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckStrategyTitleResponse'
        400:
          $ref: '#/components/responses/Error'
        401:
          $ref: '#/components/responses/Error'
        500:
          $ref: '#/components/responses/Error'

  /master/strategy:

    parameters:
      - $ref: '#/components/parameters/ApplicationName'
      - $ref: '#/components/parameters/ApplicationVersion'
      - $ref: '#/components/parameters/Platform'
      - $ref: '#/components/parameters/DeviceId'
      - $ref: '#/components/parameters/SiebelId'
      - $ref: '#/components/parameters/B3TraceId'
      - $ref: '#/components/parameters/B3SpanId'
      - $ref: '#/components/parameters/B3ParentSpanId'
      - $ref: '#/components/parameters/B3Sampled'

    get:
      tags:
        - strategy
      summary: getMasterStrategies
      description: Возвращает список всех стратегий ведущего
      operationId: getMasterStrategies
      responses:
        200:
          description: OK
          headers:
            x-trace-id:
              $ref: '#/components/headers/XTraceId'
            x-server-time:
              $ref: '#/components/headers/XServerTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMasterStrategiesResponse'
        400:
          $ref: '#/components/responses/Error'
        401:
          $ref: '#/components/responses/Error'
        422:
          $ref: '#/components/responses/Error'
        500:
          $ref: '#/components/responses/Error'

  /master/strategy/{strategyId}/portfolio:

    parameters:
      - $ref: '#/components/parameters/ApplicationName'
      - $ref: '#/components/parameters/ApplicationVersion'
      - $ref: '#/components/parameters/Platform'
      - $ref: '#/components/parameters/DeviceId'
      - $ref: '#/components/parameters/SiebelId'
      - $ref: '#/components/parameters/B3TraceId'
      - $ref: '#/components/parameters/B3SpanId'
      - $ref: '#/components/parameters/B3ParentSpanId'
      - $ref: '#/components/parameters/B3Sampled'

    get:
      tags:
        - strategy
      summary: getMasterPortfolio
      description: Возвращает виртуальный портфель ведущего
      operationId: getMasterPortfolio
      parameters:
        - $ref: '#/components/parameters/StrategyId'
      responses:
        200:
          description: OK
          headers:
            x-trace-id:
              $ref: '#/components/headers/XTraceId'
            x-server-time:
              $ref: '#/components/headers/XServerTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMasterPortfolioResponse'
        400:
          $ref: '#/components/responses/Error'
        401:
          $ref: '#/components/responses/Error'
        422:
          $ref: '#/components/responses/Error'
        500:
          $ref: '#/components/responses/Error'

  /strategy/{strategyId}:

    parameters:
      - $ref: '#/components/parameters/ApplicationName'
      - $ref: '#/components/parameters/ApplicationVersion'
      - $ref: '#/components/parameters/Platform'
      - $ref: '#/components/parameters/DeviceId'
      - $ref: '#/components/parameters/B3TraceId'
      - $ref: '#/components/parameters/B3SpanId'
      - $ref: '#/components/parameters/B3ParentSpanId'
      - $ref: '#/components/parameters/B3Sampled'

    patch:
      tags:
        - strategy
      summary: updateStrategy
      description: Обновляет торговую стратегию {strategyId}
      operationId: updateStrategy
      parameters:
        - $ref: '#/components/parameters/StrategyId'
        - $ref: '#/components/parameters/SiebelId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStrategyRequest'
      responses:
        200:
          description: OK
          headers:
            x-trace-id:
              $ref: '#/components/headers/XTraceId'
            x-server-time:
              $ref: '#/components/headers/XServerTime'
        400:
          $ref: '#/components/responses/Error'
        401:
          $ref: '#/components/responses/Error'
        422:
          $ref: '#/components/responses/Error'
        500:
          $ref: '#/components/responses/Error'

    get:
      tags:
        - strategy
      summary: getStrategy
      description: Возвращает информацию по торговой стратегии {strategyId}
      operationId: getStrategy
      parameters:
        - $ref: '#/components/parameters/StrategyId'
        - $ref: '#/components/parameters/OptionalSiebelId'
      responses:
        200:
          description: OK
          headers:
            x-trace-id:
              $ref: '#/components/headers/XTraceId'
            x-server-time:
              $ref: '#/components/headers/XServerTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStrategyResponse'
        400:
          $ref: '#/components/responses/Error'
        401:
          $ref: '#/components/responses/Error'
        422:
          $ref: '#/components/responses/Error'
        500:
          $ref: '#/components/responses/Error'

  /strategy/{strategyId}/lite:

    parameters:
      - $ref: '#/components/parameters/ApplicationName'
      - $ref: '#/components/parameters/ApplicationVersion'
      - $ref: '#/components/parameters/Platform'
      - $ref: '#/components/parameters/DeviceId'
      - $ref: '#/components/parameters/SiebelId'
      - $ref: '#/components/parameters/B3TraceId'
      - $ref: '#/components/parameters/B3SpanId'
      - $ref: '#/components/parameters/B3ParentSpanId'
      - $ref: '#/components/parameters/B3Sampled'

    get:
      tags:
        - strategy
      summary: getLiteStrategy
      description: Возвращает облегченные данные торговой стратегии {strategyId}
      operationId: getLiteStrategy
      parameters:
        - $ref: '#/components/parameters/StrategyId'
      responses:
        200:
          description: OK
          headers:
            x-trace-id:
              $ref: '#/components/headers/XTraceId'
            x-server-time:
              $ref: '#/components/headers/XServerTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLiteStrategyResponse'
        400:
          $ref: '#/components/responses/Error'
        401:
          $ref: '#/components/responses/Error'
        422:
          $ref: '#/components/responses/Error'
        500:
          $ref: '#/components/responses/Error'

  /strategy/{strategyId}/signal:

    parameters:
      - $ref: '#/components/parameters/ApplicationName'
      - $ref: '#/components/parameters/ApplicationVersion'
      - $ref: '#/components/parameters/Platform'
      - $ref: '#/components/parameters/DeviceId'
      - $ref: '#/components/parameters/SiebelId'
      - $ref: '#/components/parameters/B3TraceId'
      - $ref: '#/components/parameters/B3SpanId'
      - $ref: '#/components/parameters/B3ParentSpanId'
      - $ref: '#/components/parameters/B3Sampled'

    get:
      tags:
        - strategy
      summary: getSignals
      description: Возвращает список сделок (сигналов)  в рамках торговой стратегии {strategyId}
      operationId: getSignals
      parameters:
        - $ref: '#/components/parameters/StrategyId'
        - $ref: '#/components/parameters/Cursor'
        - $ref: '#/components/parameters/Limit'
      responses:
        200:
          description: OK
          headers:
            x-trace-id:
              $ref: '#/components/headers/XTraceId'
            x-server-time:
              $ref: '#/components/headers/XServerTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSignalsResponse'
        400:
          $ref: '#/components/responses/Error'
        401:
          $ref: '#/components/responses/Error'
        422:
          $ref: '#/components/responses/Error'
        500:
          $ref: '#/components/responses/Error'

  /subscription/strategy/{strategyId}:

    parameters:
      - $ref: '#/components/parameters/ApplicationName'
      - $ref: '#/components/parameters/ApplicationVersion'
      - $ref: '#/components/parameters/Platform'
      - $ref: '#/components/parameters/DeviceId'
      - $ref: '#/components/parameters/SiebelId'
      - $ref: '#/components/parameters/B3TraceId'
      - $ref: '#/components/parameters/B3SpanId'
      - $ref: '#/components/parameters/B3ParentSpanId'
      - $ref: '#/components/parameters/B3Sampled'

    delete:
      tags:
        - subscription
      summary: deleteSubscription
      description: Удаляет подписку договора {contractId} на торговую стратегию {strategyId}
      operationId: deleteSubscription
      parameters:
        - $ref: '#/components/parameters/StrategyId'
        - name: contractId
          description: Номер договора
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/ContractId'
      responses:
        200:
          description: OK
          headers:
            x-trace-id:
              $ref: '#/components/headers/XTraceId'
            x-server-time:
              $ref: '#/components/headers/XServerTime'
        400:
          $ref: '#/components/responses/Error'
        401:
          $ref: '#/components/responses/Error'
        422:
          $ref: '#/components/responses/Error'
        500:
          $ref: '#/components/responses/Error'

  /signal:

    parameters:
      - $ref: '#/components/parameters/ApplicationName'
      - $ref: '#/components/parameters/ApplicationVersion'
      - $ref: '#/components/parameters/Platform'
      - $ref: '#/components/parameters/DeviceId'
      - $ref: '#/components/parameters/SiebelId'
      - $ref: '#/components/parameters/B3TraceId'
      - $ref: '#/components/parameters/B3SpanId'
      - $ref: '#/components/parameters/B3ParentSpanId'
      - $ref: '#/components/parameters/B3Sampled'

    post:
      tags:
        - signal
      summary: createSignal
      description: Создаёт торговый сигнал от лица авторизованного клиента
      operationId: createSignal
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSignalRequest'
      responses:
        202:
          description: Accepted
          headers:
            x-trace-id:
              $ref: '#/components/headers/XTraceId'
            x-server-time:
              $ref: '#/components/headers/XServerTime'
        400:
          $ref: '#/components/responses/Error'
        401:
          $ref: '#/components/responses/Error'
        422:
          $ref: '#/components/responses/Error'
        500:
          $ref: '#/components/responses/Error'

  /strategy/{strategyId}/analytics/value:

    parameters:
      - $ref: '#/components/parameters/ApplicationName'
      - $ref: '#/components/parameters/ApplicationVersion'
      - $ref: '#/components/parameters/Platform'
      - $ref: '#/components/parameters/DeviceId'
      - $ref: '#/components/parameters/OptionalSiebelId'
      - $ref: '#/components/parameters/B3TraceId'
      - $ref: '#/components/parameters/B3SpanId'
      - $ref: '#/components/parameters/B3ParentSpanId'
      - $ref: '#/components/parameters/B3Sampled'

    get:
      tags:
        - analytics
      summary: getMasterPortfolioValues
      description: Возвращает стоимости виртуального портфеля в рамках торговой стратегии {strategyId} за временной промежуток
      operationId: getMasterPortfolioValues
      parameters:
        - $ref: '#/components/parameters/StrategyId'
        - name: limit
          description: Ограничение "сверху" на количество возвращаемых точек
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
        - name: from
          description: Левая граница временного промежутка
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        200:
          description: OK
          headers:
            x-trace-id:
              $ref: '#/components/headers/XTraceId'
            x-server-time:
              $ref: '#/components/headers/XServerTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMasterPortfolioValuesResponse'
        400:
          $ref: '#/components/responses/Error'
        401:
          $ref: '#/components/responses/Error'
        422:
          $ref: '#/components/responses/Error'
        500:
          $ref: '#/components/responses/Error'

  /analytics/position-retention:

    parameters:
      - $ref: '#/components/parameters/ApplicationName'
      - $ref: '#/components/parameters/ApplicationVersion'
      - $ref: '#/components/parameters/Platform'
      - $ref: '#/components/parameters/DeviceId'
      - $ref: '#/components/parameters/SiebelId'
      - $ref: '#/components/parameters/B3TraceId'
      - $ref: '#/components/parameters/B3SpanId'
      - $ref: '#/components/parameters/B3ParentSpanId'
      - $ref: '#/components/parameters/B3Sampled'

    get:
      tags:
        - analytics
      summary: getPositionRetentions
      description: Возвращает возможные значения показателя времени удержания позиции на торговой стратегии
      operationId: getPositionRetentions
      responses:
        200:
          description: OK
          headers:
            x-trace-id:
              $ref: '#/components/headers/XTraceId'
            x-server-time:
              $ref: '#/components/headers/XServerTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPositionRetentionsResponse'
        400:
          $ref: '#/components/responses/Error'
        401:
          $ref: '#/components/responses/Error'
        422:
          $ref: '#/components/responses/Error'
        500:
          $ref: '#/components/responses/Error'

  /master/strategy/{strategyId}/analytics:

    parameters:
      - $ref: '#/components/parameters/ApplicationName'
      - $ref: '#/components/parameters/ApplicationVersion'
      - $ref: '#/components/parameters/Platform'
      - $ref: '#/components/parameters/DeviceId'
      - $ref: '#/components/parameters/SiebelId'
      - $ref: '#/components/parameters/B3TraceId'
      - $ref: '#/components/parameters/B3SpanId'
      - $ref: '#/components/parameters/B3ParentSpanId'
      - $ref: '#/components/parameters/B3Sampled'

    get:
      tags:
        - analytics
      summary: getMasterStrategyAnalytics
      description: Возвращает аналитические показатели по стратегии ведущего
      operationId: getMasterStrategyAnalytics
      parameters:
        - $ref: '#/components/parameters/StrategyId'
      responses:
        200:
          description: OK
          headers:
            x-trace-id:
              $ref: '#/components/headers/XTraceId'
            x-server-time:
              $ref: '#/components/headers/XServerTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMasterStrategyAnalyticsResponse'
        400:
          $ref: '#/components/responses/Error'
        401:
          $ref: '#/components/responses/Error'
        422:
          $ref: '#/components/responses/Error'
        500:
          $ref: '#/components/responses/Error'

  /client:

    parameters:
      - $ref: '#/components/parameters/ApplicationName'
      - $ref: '#/components/parameters/ApplicationVersion'
      - $ref: '#/components/parameters/Platform'
      - $ref: '#/components/parameters/DeviceId'
      - $ref: '#/components/parameters/SiebelId'
      - $ref: '#/components/parameters/B3TraceId'
      - $ref: '#/components/parameters/B3SpanId'
      - $ref: '#/components/parameters/B3ParentSpanId'
      - $ref: '#/components/parameters/B3Sampled'

    get:
      tags:
        - client
      summary: getAuthorizedClient
      description: Возвращает данные авторизованного пользователя относительно его участия в автоследовании
      operationId: getAuthorizedClient
      responses:
        200:
          description: OK
          headers:
            x-trace-id:
              $ref: '#/components/headers/XTraceId'
            x-server-time:
              $ref: '#/components/headers/XServerTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAuthorizedClientResponse'
        400:
          $ref: '#/components/responses/Error'
        401:
          $ref: '#/components/responses/Error'
        422:
          $ref: '#/components/responses/Error'
        500:
          $ref: '#/components/responses/Error'

  /strategy/catalog:

    parameters:
      - $ref: '#/components/parameters/ApplicationName'
      - $ref: '#/components/parameters/ApplicationVersion'
      - $ref: '#/components/parameters/Platform'
      - $ref: '#/components/parameters/DeviceId'
      - $ref: '#/components/parameters/OptionalSiebelId'
      - $ref: '#/components/parameters/B3TraceId'
      - $ref: '#/components/parameters/B3SpanId'
      - $ref: '#/components/parameters/B3ParentSpanId'
      - $ref: '#/components/parameters/B3Sampled'

    get:
      tags:
        - strategy
      summary: getStrategiesCatalog
      description: Возвращает каталог торговых стратегий
      operationId: getStrategiesCatalog
      parameters:
        - $ref: '#/components/parameters/Cursor'
        - $ref: '#/components/parameters/Limit'
        - name: tabId
          description: Идентификатор вкладки для фильтрации
          in: query
          required: false
          schema:
            type: string
            pattern: '^[a-z0-9]+(-[a-z0-9]+)*$'
            minLength: 1
            example: rub-currency
      responses:
        200:
          description: OK
          headers:
            x-trace-id:
              $ref: '#/components/headers/XTraceId'
            x-server-time:
              $ref: '#/components/headers/XServerTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStrategiesCatalogResponse'
        400:
          $ref: '#/components/responses/Error'
        401:
          $ref: '#/components/responses/Error'
        422:
          $ref: '#/components/responses/Error'
        500:
          $ref: '#/components/responses/Error'

  /strategy/catalog/tab:

    parameters:
      - $ref: '#/components/parameters/ApplicationName'
      - $ref: '#/components/parameters/ApplicationVersion'
      - $ref: '#/components/parameters/Platform'
      - $ref: '#/components/parameters/DeviceId'
      - $ref: '#/components/parameters/OptionalSiebelId'
      - $ref: '#/components/parameters/B3TraceId'
      - $ref: '#/components/parameters/B3SpanId'
      - $ref: '#/components/parameters/B3ParentSpanId'
      - $ref: '#/components/parameters/B3Sampled'

    get:
      tags:
        - strategy
      summary: getStrategiesCatalogTabs
      description: Возвращает список возможных вкладок (табов) для фильтрации в каталоге торговых стратегий
      operationId: getStrategiesCatalogTabs
      responses:
        200:
          description: OK
          headers:
            x-trace-id:
              $ref: '#/components/headers/XTraceId'
            x-server-time:
              $ref: '#/components/headers/XServerTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStrategiesCatalogTabsResponse'
        400:
          $ref: '#/components/responses/Error'
        401:
          $ref: '#/components/responses/Error'
        422:
          $ref: '#/components/responses/Error'
        500:
          $ref: '#/components/responses/Error'

  /contract/{contractId}/order:

    parameters:
      - $ref: '#/components/parameters/ApplicationName'
      - $ref: '#/components/parameters/ApplicationVersion'
      - $ref: '#/components/parameters/Platform'
      - $ref: '#/components/parameters/DeviceId'
      - $ref: '#/components/parameters/SiebelId'
      - $ref: '#/components/parameters/B3TraceId'
      - $ref: '#/components/parameters/B3SpanId'
      - $ref: '#/components/parameters/B3ParentSpanId'
      - $ref: '#/components/parameters/B3Sampled'

    get:
      tags:
        - contract
      summary: getOrders
      description: Возвращает все заявки, выставляемые с договора {contractId} в рамках торговой стратегии, за которой он следует в текущий момент
      operationId: getOrders
      parameters:
        - $ref: '#/components/parameters/Cursor'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/ContractId'
      responses:
        200:
          description: OK
          headers:
            x-trace-id:
              $ref: '#/components/headers/XTraceId'
            x-server-time:
              $ref: '#/components/headers/XServerTime'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrdersResponse'
        400:
          $ref: '#/components/responses/Error'
        401:
          $ref: '#/components/responses/Error'
        422:
          $ref: '#/components/responses/Error'
        500:
          $ref: '#/components/responses/Error'

components:

  headers:

    XTraceId:
      description: Идентификатор ответа
      schema:
        type: string
        minLength: 1
      required: true

    XServerTime:
      description: Метка времени формирования ответа
      schema:
        type: string
        format: date-time
      required: true

  parameters:

    ApplicationName:
      description: Название вызывающего приложения
      name: x-app-name
      in: header
      required: true
      schema:
        type: string
        minLength: 1
      example: investing

    ApplicationVersion:
      description: Версия вызывающего приложения
      name: x-app-version
      in: header
      required: true
      schema:
        type: string
        minLength: 1
      example: 5.0.0

    Platform:
      description: 'Платформа: "ios", "android", другое'
      name: x-platform
      in: header
      required: true
      schema:
        type: string
        minLength: 1
      example: android

    DeviceId:
      description: Идентификатор устройства
      name: x-device-id
      in: header
      required: false
      schema:
        type: string
        minLength: 1

    SiebelId:
      description: Siebel id авторизованного пользователя
      name: x-tcs-siebel-id
      in: header
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 12

    OptionalSiebelId:
      description: Опциональный Siebel id авторизованного пользователя
      name: x-tcs-siebel-id
      in: header
      required: false
      schema:
        type: string
        minLength: 1
        maxLength: 12

    StrategyId:
      description: Идентификатор стратегии
      name: strategyId
      in: path
      required: true
      schema:
        type: string
        format: uuid
      example: 397aee00-f163-4eff-a7a6-a4bc11118776

    B3TraceId:
      description: Общий идентификатор трассировки
      name: x-b3-traceid
      in: header
      required: false
      schema:
        type: string
        pattern: '^[a-f0-9]{16}$|^[a-f0-9]{32}$'
      example: 5b23a9529c0f48bc5b23a9529c0f48bc

    B3SpanId:
      description: Позиция текущей операции в общем дереве трассировки
      name: x-b3-spanid
      in: header
      required: false
      schema:
        type: string
        pattern: '^[a-f0-9]{16}$'
      example: a2fb4a1d1a96d312

    B3ParentSpanId:
      description: Позиция родительской операции в общем дереве трассировки
      name: x-b3-parentspanid
      in: header
      required: false
      schema:
        type: string
        pattern: '^[a-f0-9]{16}$'
      example: a2fb4a1d1a96d312

    B3Sampled:
      description: Сэмплинг
      name: x-b3-sampled
      in: header
      required: false
      schema:
        type: integer
        minimum: 0
        maximum: 1
      example: 1

    Cursor:
      name: cursor
      description: Идентификатор элемента, с которого начинать выдачу результатов при формировании ответа
      in: query
      required: false
      schema:
        type: string
        minLength: 1

    Limit:
      name: limit
      description: Ограничение "сверху" на количество возвращаемых элементов данных
      in: query
      required: false
      schema:
        type: integer
        minimum: 1

    ContractId:
      description: Номер договора
      name: contractId
      in: path
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 10
      example: 2000000000

  responses:

    Error:
      description: Error
      headers:
        x-trace-id:
          $ref: '#/components/headers/XTraceId'
        x-server-time:
          $ref: '#/components/headers/XServerTime'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

  schemas:

    ContractId:
      description: Номер договора
      type: string
      minLength: 1
      maxLength: 10
      example: 2000000000

    CreateStrategyRequest:
      type: object
      required:
        - contractId
        - title
        - baseCurrency
        - riskProfile
        - description
        - baseMoneyPositionQuantity
        - positionRetentionId
      properties:
        contractId:
          $ref: '#/components/schemas/ContractId'
        title:
          $ref: '#/components/schemas/StrategyTitle'
        baseCurrency:
          $ref: '#/components/schemas/Currency'
        riskProfile:
          $ref: '#/components/schemas/StrategyRiskProfile'
        description:
          description: Описание стратегии
          type: string
          minLength: 1
          example: Пушка
        baseMoneyPositionQuantity:
          description: Объем позиции в базовой валюте
          type: number
          format: decimal
          minimum: 0
          exclusiveMinimum: true
        positionRetentionId:
          $ref: '#/components/schemas/PositionRetentionId'

    StrategyTitle:
      description: Название стратегии
      type: string
      minLength: 1
      example: Ракета

    NullableStrategyTitle:
      description: Название стратегии
      type: string
      minLength: 1
      nullable: true
      example: Ракета

    Currency:
      description: Валюта
      type: string
      enum: [rub, usd]

    NullableCurrency:
      description: Валюта
      type: string
      enum: [rub, usd]
      # TODO: наследовать?
      nullable: true

    StrategyRiskProfile:
      description: Риск-профиль стратегии
      type: string
      enum: [conservative, moderate, aggressive]

    NullableStrategyRiskProfile:
      description: Риск-профиль стратегии
      type: string
      enum: [conservative, moderate, aggressive]
      # TODO: наследовать?
      nullable: true

    PositionRetentionId:
      description: Идентификатор времени удержания позиции
      type: string
      pattern: '^[a-z0-9]+(-[a-z0-9]+)*$'
      minLength: 1
      maxLength: 16
      example: days

    CreateStrategyResponse:
      type: object
      required:
        - strategy
      properties:
        strategy:
          $ref: '#/components/schemas/CreatedStrategy'

    CreatedStrategy:
      description: Созданная торговая стратегия
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/StrategyId'

    UpdateStrategyRequest:
      type: object
      properties:
        title:
          $ref: '#/components/schemas/NullableStrategyTitle'
        baseCurrency:
          $ref: '#/components/schemas/NullableCurrency'
        riskProfile:
          $ref: '#/components/schemas/NullableStrategyRiskProfile'
        description:
          description: Описание стратегии
          type: string
          minLength: 1
          nullable: true
          example: Пушка

    CreateSignalRequest:
      type: object
      required:
        - strategyId
        - version
        - ticker
        - tradingClearingAccount
        - action
        - quantity
        - price
      properties:
        strategyId:
          $ref: '#/components/schemas/StrategyId'
        version:
          $ref: '#/components/schemas/MasterPortfolioVersion'
        ticker:
          description: Тикер
          type: string
          minLength: 1
          maxLength: 12
          example: TCS
        tradingClearingAccount:
          description: Торгово-клиринговый счёт
          type: string
          minLength: 1
          maxLength: 12
          example: L01+00002F00
        action:
          description: Действие, на которое направлен торговый сигнал (покупка/продажа)
          type: string
          enum: [buy, sell]
        quantity:
          description: Количество единиц актива
          type: number
          format: decimal
          minimum: 0
          exclusiveMinimum: true
        price:
          description: Цена за единицу актива (в абсолютной величине)
          type: number
          format: decimal
          minimum: 0
          exclusiveMinimum: true

    GetMasterPortfolioValuesResponse:
      type: object
      required:
        - values
        - relativeYield
      properties:
        interval:
          description: Интервал времени, содержащий отобранные точки
          type: object
          required:
            - from
            - to
          properties:
            from:
              description: Метка времени среза "левой" точки
              type: string
              format: date-time
            to:
              description: Метка времени среза "правой" точки
              type: string
              format: date-time
        values:
          description: Стоимости виртуального портфеля
          type: array
          items:
            type: number
            format: decimal
            minimum: 0
        relativeYield:
          description: Относительная доходность виртуального портфеля за выбранный промежуток
          type: number
          format: decimal

    GetStrategyResponse:
      type: object
      required:
        - id
        - status
        - title
        - baseCurrency
        - description
        - riskProfile
        - score
        - owner
        - characteristics
        - topPositions
        - portfolioRate
        - subscription
        - tests
        - isOverloaded
        - tags
      properties:
        id:
          $ref: '#/components/schemas/StrategyId'
        status:
          $ref: '#/components/schemas/StrategyStatus'
        title:
          $ref: '#/components/schemas/StrategyTitle'
        baseCurrency:
          $ref: '#/components/schemas/Currency'
        description:
          description: Описание стратегии
          type: string
          minLength: 1
          example: Пушка
        riskProfile:
          $ref: '#/components/schemas/StrategyRiskProfile'
        score:
          description: Оценка стратегии
          type: integer
          minimum: 1
          maximum: 5
        owner:
          $ref: '#/components/schemas/StrategyOwner'
        characteristics:
          description: Характеристики стратегии
          type: array
          items:
            type: object
            required:
              - type
              - items
            properties:
              type:
                description: Тип характеристик
                type: string
                enum: [main, trade, condition]
              items:
                description: Характеристики
                type: array
                items:
                  $ref: '#/components/schemas/StrategyCharacteristic'
        topPositions:
          type: array
          items:
            $ref: '#/components/schemas/TopPosition'
        portfolioRate:
          $ref: '#/components/schemas/PortfolioRate'
        subscription:
          $ref: '#/components/schemas/StrategySubscription'
        tests:
          description: Список тестирований, прохождение которых необходимо для следования за стратегией
          type: array
          items:
            $ref: '#/components/schemas/StrategyTest'
        isOverloaded:
          description: Признак перегруженности стратегии
          type: boolean
        tags:
          description: Список меток стратегии
          type: array
          items:
            $ref: '#/components/schemas/StrategyTag'

    StrategyTag:
      description: Метка
      type: object
      required:
        - id
      properties:
        id:
          description: Идентификатор тэга
          type: string
          pattern: '^[a-z0-9]+(-[a-z0-9]+)*$'
          example: tinkoff-choice

    StrategyOwner:
      description: Владелец стратегии
      type: object
      required:
        - socialProfile
      properties:
        socialProfile:
          $ref: '#/components/schemas/SocialProfile'

    SocialProfile:
      description: Социальный профиль в Пульсе
      type: object
      required:
        - id
      properties:
        id:
          description: Идентификатор профиля
          type: string
          format: uuid
          example: 397aee00-f163-4eff-a7a6-a4bc11118776

    StrategyCharacteristic:
      description: Характеристика стратегии
      type: object
      required:
        - id
        # TODO: deprecated
        - title
        - value
      properties:
        id:
          description: Идентификатор характеристики
          type: string
          minLength: 1
          pattern: '^[a-z0-9]+(-[a-z0-9]+)*$'
          example: tail-value
        title:
          description: Наименование характеристики (для отображения)
          type: string
          minLength: 1
          example: Рекомендуемая сумма
          deprecated: true
        value:
          description: Значение характеристики
          type: string
          minLength: 1
          example: 1 000 $
        hint:
          description: Подсказка
          type: string
          minLength: 1
          example: Сумма, необходимая для максимально точного следования за стратегией
          deprecated: true

    TopPosition:
      description: Позиция из топа виртуального портфеля
      type: object
      required:
        - exchangePosition
        - signalsCount
      properties:
        exchangePosition:
          $ref: '#/components/schemas/ExchangePosition'
        signalsCount:
          description: Количество сигналов
          type: integer
          minimum: 1

    PortfolioRate:
      description: Доли виртуального портфеля
      type: object
      required:
        - types
        - sectors
        - companies
      properties:
        types:
          description: Доли портфеля в разрезе типов актива
          type: array
          items:
            $ref: '#/components/schemas/PortfolioRateSection'
        sectors:
          description: Доли портфеля в разрезе секторов
          type: array
          items:
            $ref: '#/components/schemas/PortfolioRateSection'
        companies:
          description: Доли портфеля в разрезе компаний
          type: array
          items:
            $ref: '#/components/schemas/PortfolioRateSection'

    PortfolioRateSection:
      description: Секция портфельной аналитики
      type: object
      required:
        - title
        - percent
      properties:
        title:
          description: Наименование секции (для отображения)
          type: string
          minLength: 1
        percent:
          description: Доля секции в портфеле (в процентах)
          type: number
          minimum: 0
          maximum: 100

    StrategySubscription:
      description: Подписка ведомого на стратегию
      type: object
      required:
        - isLead
        - blocked
        - blockReasons
      properties:
        isLead:
          description: Признак наличия подписки авторизованного пользователя на стратегию
          type: boolean
        contractId:
          $ref: '#/components/schemas/ContractId'
        blocked:
          description: Признак заблокированной подписки
          type: boolean
        blockReasons:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionBlockReason'

    SubscriptionBlockReason:
      description: Причина блокировки подписки
      type: object
      required:
        - id
      properties:
        id:
          description: Идентификатор причины блокировки
          type: string
          pattern: '^[a-z0-9]+(-[a-z0-9]+)*$'
          example: risk-profile

    GetLiteStrategyResponse:
      type: object
      required:
        - id
        - title
        - baseCurrency
        - status
      properties:
        id:
          $ref: '#/components/schemas/StrategyId'
        title:
          $ref: '#/components/schemas/StrategyTitle'
        baseCurrency:
          $ref: '#/components/schemas/Currency'
        status:
          $ref: '#/components/schemas/StrategyStatus'

    StrategyId:
      description: Идентификатор торговой стратегии
      type: string
      format: uuid
      example: 397aee00-f163-4eff-a7a6-a4bc11118776

    StrategyStatus:
      description: Статус стратегии
      type: string
      enum: [draft, active, frozen, closed]

    StrategyTest:
      description: Тестирование
      type: object
      required:
        - id
      properties:
        id:
          description: Идентификатор тестирования
          type: string
          minLength: 1
          example: foreign_shares

    GetPositionRetentionsResponse:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/PositionRetention'

    PositionRetention:
      description: Время удержания позиции
      type: object
      required:
        - positionRetentionId
        - title
      properties:
        positionRetentionId:
          $ref: '#/components/schemas/PositionRetentionId'
        title:
          description: Отображаемое наименование
          type: string
          minLength: 1
          example: до дня

    GetSignalsResponse:
      type: object
      required:
        - nextCursor
        - hasNext
        - items
      properties:
        nextCursor:
          description: Последний сигнал возвращённый в текущем ответе для следующего запроса
          type: string
          minLength: 1
          nullable: true
        hasNext:
          description: Признак наличия элементов, не вошедших в текущий ответ
          type: boolean
        items:
          type: array
          items:
            $ref: '#/components/schemas/Signal'

    Signal:
      description: Торговый сигнал
      type: object
      required:
        - totalAmount
        - createdAt
        - quantity
        - action
        - price
        - exchangePosition
        - version
      properties:
        totalAmount:
          description: Общая сумма сделки (сигнала)
          type: number
          format: decimal
          minimum: 0
          exclusiveMinimum: true
        createdAt:
          description: Дата и время сигнала
          type: string
          format: date-time
        quantity:
          description: Количество единиц актива
          type: number
          format: decimal
          minimum: 0
          exclusiveMinimum: true
        action:
          description: Действие, на которое направлен торговый сигнал (покупка/продажа)
          type: string
          enum: [buy, sell]
        price:
          $ref: '#/components/schemas/Price'
        exchangePosition:
          $ref: '#/components/schemas/ExchangePosition'
        version:
          $ref: '#/components/schemas/MasterPortfolioVersion'

    Price:
      description: Цена
      type: object
      required:
        - value
        - currency
      properties:
        value:
          description: Значение цены за единицу актива
          type: number
          format: decimal
          minimum: 0
          exclusiveMinimum: true
        currency:
          $ref: '#/components/schemas/Currency'

    ExchangePosition:
      description: Биржевая позиция
      type: object
      required:
        - ticker
        - briefName
        - type
      properties:
        ticker:
          description: Тикер
          type: string
          example: TCS
          minLength: 1
        briefName:
          description: Короткое наименование инструмента
          type: string
          example: TCS Group (Tinkoff Bank holder)
        image:
          description: Имя файла-изображения инструмента
          type: string
          example: US87238U2033.png
        type:
          description: Тип актива
          type: string
          enum: [bond, share, etf, sp, currency, futures]

    GetMasterStrategiesResponse:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/MasterStrategy'

    MasterStrategy:
      type: object
      required:
        - id
        - title
        - status
      properties:
        id:
          $ref: '#/components/schemas/StrategyId'
        title:
          $ref: '#/components/schemas/StrategyTitle'
        status:
          description: Статус стратегии
          type: string
          enum: [draft, active, frozen]

    CheckStrategyTitleRequest:
      type: object
      required:
        - title
      properties:
        title:
          $ref: '#/components/schemas/StrategyTitle'

    CheckStrategyTitleResponse:
      type: object
      required:
        - isAvailable
      properties:
        isAvailable:
          description: Признак доступного названия для стратегии
          type: boolean

    GetAuthorizedClientResponse:
      type: object
      required:
        - master
      properties:
        master:
          $ref: '#/components/schemas/MasterClient'

    MasterClient:
      description: Ведущий
      type: object
      required:
        - status
      properties:
        status:
          description: Статус клиента в роли ведущего
          type: string
          enum: [none, confirmed, registered]

    GetMasterStrategyAnalyticsResponse:
      type: object
      required:
        - tail
        - portfolio
        - yield
        - dailyYield
        - relativeYield
        - relativeDailyYield
      properties:
        tail:
          description: Хвост торговой стратегии
          type: object
          required:
            - value
            - currency
          properties:
            value:
              description: Объем хвоста
              type: number
              format: decimal
              minimum: 0
            currency:
              $ref: '#/components/schemas/Currency'
        portfolio:
          description: Виртуальный портфель
          type: object
          required:
            - value
            - baseMoneyPositionQuantity
            - currency
          properties:
            value:
              description: Стоимость виртуального портфеля
              type: number
              format: decimal
              minimum: 0
              exclusiveMinimum: true
            baseMoneyPositionQuantity:
              description: Объем позиции в базовой валюте
              type: number
              format: decimal
              minimum: 0
            currency:
              $ref: '#/components/schemas/Currency'
        yield:
          description: Абсолютная доходность виртуального портфеля за все время
          type: object
          required:
            - value
            - currency
          properties:
            value:
              description: Значение
              type: number
              format: decimal
            currency:
              $ref: '#/components/schemas/Currency'
        dailyYield:
          description: Абсолютная доходность виртуального портфеля за день
          type: object
          required:
            - value
            - currency
          properties:
            value:
              description: Значение
              type: number
              format: decimal
            currency:
              $ref: '#/components/schemas/Currency'
        relativeYield:
          description: Относительная доходность виртуального портфеля за все время
          type: number
          format: decimal
        relativeDailyYield:
          description: Относительная доходность виртуального портфеля за день
          type: number
          format: decimal

    GetMasterPortfolioResponse:
      type: object
      required:
        - version
        - positions
        - baseMoneyPosition
        - portfolioAverageYield
        - portfolioYieldPerDay
        - portfolioYield
        - fullAmount
      properties:
        version:
          $ref: '#/components/schemas/MasterPortfolioVersion'
        positions:
          description: Позиции виртуального портфеля
          type: array
          items:
            $ref: '#/components/schemas/MasterPortfolioPosition'
        baseMoneyPosition:
          $ref: '#/components/schemas/MasterPortfolioBaseMoneyPosition'
        portfolioAverageYield:
          $ref: '#/components/schemas/Yield'
        portfolioYieldPerDay:
          $ref: '#/components/schemas/Yield'
        portfolioYield:
          $ref: '#/components/schemas/Yield'
        fullAmount:
          $ref: '#/components/schemas/FullAmount'

    MasterPortfolioVersion:
      description: Версия виртуального портфеля
      type: integer
      format: int32
      minimum: 0

    MasterPortfolioPosition:
      description: Позиция в виртуальном портфеле
      type: object
      required:
        - exchangePosition
        - quantity
        - lastPrice
        - value
        - rate
        - prices
        - yields
      properties:
        exchangePosition:
          $ref: '#/components/schemas/ExchangePosition'
        quantity:
          description: Количество единиц актива
          type: number
          format: decimal
          minimum: 0
          exclusiveMinimum: true
        lastPrice:
          $ref: '#/components/schemas/PositiveValue'
        value:
          $ref: '#/components/schemas/PositiveValue'
        rate:
          $ref: '#/components/schemas/MasterPositionRate'
        prices:
          $ref: '#/components/schemas/PositionPrices'
        yields:
          $ref: '#/components/schemas/Yields'

    Value:
      description: Общая стоимость
      type: object
      required:
        - value
        - currency
      properties:
        value:
          description: Значение
          type: number
          format: decimal
        currency:
          $ref: '#/components/schemas/Currency'

    PositiveValue:
      description: Неотрицательная общая стоимость
      type: object
      required:
        - value
        - currency
      properties:
        value:
          description: Значение
          type: number
          format: decimal
          minimum: 0
          exclusiveMinimum: true
        currency:
          $ref: '#/components/schemas/Currency'

    FullAmount:
      description: Суммарная стоимость в разбивке по типам позиций
      type: object
      required:
        - bonds
        - stocks
        - etf
        - currency
        - portfolio
      properties:
        bonds:
          $ref: '#/components/schemas/Value'
        stocks:
          $ref: '#/components/schemas/Value'
        etf:
          $ref: '#/components/schemas/Value'
        currency:
          $ref: '#/components/schemas/Value'
        portfolio:
          $ref: '#/components/schemas/Value'

    MasterPortfolioBaseMoneyPosition:
      description: Денежная позиция в виртуальном портфеле в базовой валюте
      type: object
      required:
        - currency
        - quantity
        - rate
      properties:
        currency:
          $ref: '#/components/schemas/Currency'
        quantity:
          description: Количество единиц актива
          type: number
          format: decimal
          minimum: 0
        rate:
          $ref: '#/components/schemas/MasterPositionRate'

    MasterPositionRate:
      description: Доля позиции от всего портфеля (в процентах)
      type: number
      format: decimal
      minimum: 0
      maximum: 100

    PositionPrices:
      description: Цены позиции
      type: object
      required:
        - averagePositionPrice
        - currentPrice
        - avgCostPrice
      properties:
        averagePositionPrice:
          $ref: '#/components/schemas/PositiveValue'
        currentPrice:
          $ref: '#/components/schemas/PositiveValue'
        avgCostPrice:
          $ref: '#/components/schemas/AvgCostPrice'

    Yields:
      description: Доходности позиции
      type: object
      required:
        - yield
        - yieldPerDay
        - yieldAverage
      properties:
        yield:
          $ref: '#/components/schemas/Yield'
        yieldPerDay:
          $ref: '#/components/schemas/Yield'
        yieldAverage:
          $ref: '#/components/schemas/Yield'

    AvgCostPrice:
      description: Средняя цена по позиции, рассчитанная методом FIFO
      type: object
      required:
        - average
      properties:
        average:
          $ref: '#/components/schemas/Value'

    Yield:
      description: Доходность
      type: object
      required:
        - absolute
        - relative
      properties:
        absolute:
          $ref: '#/components/schemas/Value'
        relative:
          description: Относительная доходность
          type: number
          format: decimal


    GetStrategiesCatalogResponse:
      type: object
      required:
        - nextCursor
        - hasNext
        - items
      properties:
        nextCursor:
          description: Крайний возвращённый в текущем ответе идентификатор элемента, который необходимо использовать при следующем запросе
          type: string
          minLength: 1
          nullable: true
        hasNext:
          description: Признак наличия элементов, не вошедших в текущий ответ
          type: boolean
        items:
          type: array
          items:
            $ref: '#/components/schemas/CatalogStrategy'

    CatalogStrategy:
      description: Торговая стратегия в каталоге
      type: object
      required:
        - id
        - title
        - baseCurrency
        - riskProfile
        - score
        - owner
        - relativeYield
        - portfolioValues
        - characteristics
        - tags
      properties:
        id:
          $ref: '#/components/schemas/StrategyId'
        title:
          $ref: '#/components/schemas/StrategyTitle'
        baseCurrency:
          $ref: '#/components/schemas/Currency'
        riskProfile:
          $ref: '#/components/schemas/StrategyRiskProfile'
        score:
          description: Оценка стратегии
          type: integer
          minimum: 1
          maximum: 5
        owner:
          $ref: '#/components/schemas/CatalogStrategyOwner'
        relativeYield:
          description: Относительная доходность стратегии за все время (в процентах)
          type: number
          format: decimal
        portfolioValues:
          description: Стоимости виртуального портфеля
          type: array
          items:
            type: number
            minimum: 0
        characteristics:
          description: Характеристики стратегии
          type: array
          items:
            $ref: '#/components/schemas/CatalogStrategyCharacteristic'
        tags:
          description: Список меток стратегии
          type: array
          items:
            $ref: '#/components/schemas/StrategyTag'

    CatalogStrategyOwner:
      description: Владелец стратегии
      type: object
      required:
        - socialProfile
      properties:
        socialProfile:
          $ref: '#/components/schemas/CatalogSocialProfile'

    CatalogSocialProfile:
      description: Социальный профиль в Пульсе
      type: object
      required:
        - id
        - nickname
      properties:
        id:
          description: Идентификатор профиля
          type: string
          format: uuid
          example: 397aee00-f163-4eff-a7a6-a4bc11118776
        nickname:
          description: Никнейм профиля
          type: string
          minLength: 1
          example: trader
        image:
          description: Идентификатор аватара профиля автора
          type: string
          format: uuid
          example: 397aee00-f163-4eff-a7a6-a4bc11118776

    CatalogStrategyCharacteristic:
      description: Характеристика торговой стратегии в каталоге
      type: object
      required:
        - id
        - value
        - subtitle
      properties:
        id:
          description: Идентификатор характеристики
          type: string
          pattern: '^[a-z0-9]+(-[a-z0-9]+)*$'
          example: tail-value
          minLength: 1
        value:
          description: Значение характеристики
          type: string
          minLength: 1
          example: 250 000 $
        subtitle:
          description: Подзаголовок характеристики
          type: string
          minLength: 1
          example: в управлении

    GetStrategiesCatalogTabsResponse:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CatalogStrategyTab'

    CatalogStrategyTab:
      description: Вкладка для фильтрации в каталоге стратегий
      type: object
      required:
        - tabId
        - title
        - type
      properties:
        tabId:
          description: Идентификатор вкладки
          type: string
          pattern: '^[a-z0-9]+(-[a-z0-9]+)*$'
          minLength: 1
          example: conservative-risk-level
        title:
          description: Отображаемое наименование
          type: string
          minLength: 1
          example: Низкий риск
        type:
          description: Тип вкладки
          type: string
          enum: [cloud, collection, square, list, tile]
        description:
          description: Описание вкладки
          type: string
          minLength: 1
          example: Стратегии для консервативных инвесторов
        image:
          description: Идентификатор изображения вкладки
          type: string
          minLength: 1

    GetOrdersResponse:
      type: object
      required:
        - nextCursor
        - hasNext
        - items
      properties:
        nextCursor:
          description: Крайний возвращённый в текущем ответе идентификатор элемента, который необходимо использовать при следующем запросе
          type: string
          minLength: 1
          nullable: true
        hasNext:
          description: Признак наличия элементов, не вошедших в текущий ответ
          type: boolean
        items:
          type: array
          items:
            $ref: '#/components/schemas/Order'

    Order:
      description: Выставленная заявка
      type: object
      required:
        - totalAmount
        - createdAt
        - quantity
        - action
        - price
        - exchangePosition
        - issuer
      properties:
        totalAmount:
          description: Общая сумма заявки
          type: number
          format: decimal
          minimum: 0
          exclusiveMinimum: true
        createdAt:
          description: Дата и время создания заявки
          type: string
          format: date-time
        quantity:
          description: Количество единиц актива
          type: number
          format: decimal
          minimum: 0
          exclusiveMinimum: true
        action:
          description: Действие, на которое направлена заявка (покупка/продажа)
          type: string
          enum: [buy, sell]
        price:
          $ref: '#/components/schemas/Price'
        exchangePosition:
          $ref: '#/components/schemas/ExchangePosition'
        issuer:
          description: Эмитент
          type: object
          required:
            - isAffiliated
          properties:
            isAffiliated:
              description: Признак аффилированности
              type: boolean

    ErrorResponse:
      description: Ответ с ошибкой
      type: object
      required:
        - errorId
        - errorCode
        - errorMessage
      properties:
        errorId:
          description: Уникальный идентификатор ошибки
          type: string
          minLength: 16
          maxLength: 16
          example: 02d55cabb05b44f0
        errorCode:
          description: Служебный код ошибки
          type: string
          minLength: 1
          example: InsufficientPrivileges
        errorMessage:
          description: Служебное описание ошибки
          type: string
          minLength: 1
          example: Сервис временно недоступен