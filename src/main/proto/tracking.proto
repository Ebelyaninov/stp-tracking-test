syntax = "proto3";

package ru.tinkoff.trading.tracking;

import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";

// Идентификатор биржевой позиции
message ExchangePositionId {

  // Тикер на бирже
  string ticker = 1;

  // Торгово-клиринговый счёт
  string trading_clearing_account = 2;
}

// Торговая биржевая позиция
message ExchangePosition {

  // Тикер на бирже
  string ticker = 1;

  // Торгово-клиринговый счёт
  string trading_clearing_account = 2;

  // Биржа (торговая площадка)
  Exchange exchange = 3;

  // Признак разрешённой для торговли в автоследовании позиции
  bool tracking_allowed = 4;

  // Лимит кол-ва единиц актива в рамках одной торговой сессии (суммарно на master и его slave-портфели)
  google.protobuf.Int32Value daily_quantity_limit = 5;

  // Лимит кол-ва единиц актива в рамках одной заявки (суммарно на master и его slave-портфели)
  repeated ExchangePosition.OrderQuantityLimit order_quantity_limit = 6;

  // Тикер вне биржи (например, сплитованные валюты)
  google.protobuf.StringValue otc_ticker = 7;

  // Код класса инструмента вне биржи (например, сплитованные валюты)
  google.protobuf.StringValue otc_class_code = 8;

  message OrderQuantityLimit {

    // Идентификатор периода
    string period_id = 1;

    // Лимит кол-ва единиц актива
    int32 limit = 2;
  }
}

// Биржа (торговая площадка)
enum Exchange {
  MOEX = 0;
  MOEX_PLUS = 1;
  FX = 2;
  SPB = 3;
}

// Событие
message Event {

  // Идентификатор события
  bytes id = 1;

  // Действие, породившее событие
  Action action = 2;

  // Метка времени произошедшего события
  google.protobuf.Timestamp created_at = 3;

  // Сущность, породившая событие
  oneof domain {

    // Торговая стратегия
    Strategy strategy = 4;

    // Подписка на стратегию
    Subscription subscription = 5;

    // Договор
    Contract contract = 6;

    // Операция по торговому портфелю
    // TODO: draft
    //    PortfolioOperation portfolio_operation = 7;
  }

  enum Action {
    CREATED = 0;
    UPDATED = 1;
    DELETED = 2;
  }
}

// Торговая стратегия
// Используется для отображения стратегии в social
message Strategy {

  // Идентификатор стратегии
  bytes id = 1;

  // Название
  string title = 2;
}

// Подписка на стратегию
// Используется для отображения подписки на стратегию в social
message Subscription {

  // Торговая стратегия
  Strategy strategy = 1;

  // Номер договора
  string contract_id = 2;
}

// Договор
// TODO: draft
// Используется для:
//   - извещение middle о необходимости вычислять/хранить/возвращать версии портфеля
//   - извещение сервиса счетов о необходимости пре-валидировать торговые/неторговые операции по договору
message Contract {

  // Номер договора
  string id = 1;

  // Состояние договора
  State state = 2;

  // Признак заблокированного договора
  bool blocked = 3;

  enum State {
    // Не отслеживается
    UNTRACKED = 0;
    // Отслеживается
    TRACKED = 1;
  }
}

// Команда для выполнения над портфелем
message PortfolioCommand {

  // Номер договора владельца портфеля
  string contract_id = 1;

  // Операция для выполнения над портфелем
  Operation operation = 2;

  // Метка времени события, инициировавшего создание команды
  google.protobuf.Timestamp created_at = 3;

  // Фрагмент портфеля
  Portfolio portfolio = 4;

  // Торговый сигнал
  Signal signal = 5;

  // Операция для выполнения над портфелем
  // TODO: draft
  enum Operation {
    // Инициализировать (первично заполнить) портфель
    INITIALIZE = 0;
    // Актуализировать портфель согласно полученным изменениям
    ACTUALIZE = 1;

    // Синхронизировать slave-портфель согласно полученным изменениям master-портфеля
    SYNCHRONIZE = 2;

    // Вывести денежные средства из slave-портфеля
    WITHDRAW_MONEY = 3;
    // Зарезервировать денежные средства в slave-портфеле (для последующего снятия комиссии)
    RESERVE = 4;

    // Повторить синхронизацию портфеля
    RETRY_SYNCHRONIZATION = 5;
  }
}

// Фрагмент портфеля
message Portfolio {

  // Версия портфеля
  int32 version = 2;

  // Позиция в портфеле
  repeated Position position = 4;

  // Позиция в портфеле
  BaseMoneyPosition base_money_position = 5;

  // TODO: load_date?

  // Действие над портфелем, приведшее к изменению его состава
  // Набор значений задаётся master-системой middle
  // TODO: draft
  enum Action {
    UNKNOWN = 0;
    MARGIN_FEE = 1; // Взимание комиссии за непокрытую позицию
    SERVICE_FEE = 2; // Удержание сервисной комиссии
    BROKER_FEE = 3; // Удержание фактической комиссии за сделку
    ADJUST = 4; // Завод денежных средств
    WITHDRAW = 5; // Вывод денежных средств
    CANCEL_WITHDRAW = 6; // Отмена вывода
    ADJUST_CURRENCY = 7; // Увеличение денежной позиции методом client/adjust_currency
    ADJUST_SECURITY = 8; // Увеличение ценно-бумажной позиции методом client/adjust_security
    MONEY_BUY_TRADE = 9; // Совершение сделки по покупке валюты
    MONEY_SELL_TRADE = 10; // Совершение сделки по продаже валюты
    SECURITY_SELL_TRADE = 11; // Совершение сделки по продаже ценной бумаги
    SECURITY_BUY_TRADE = 12; // Совершение сделки по покупке ценной бумаги
    REPO_RPS_TRADE = 13; // Совершение сделки РЕПО РПС
    REPO_CK_TRADE = 14; // Совершение сделки РЕПО с ЦК
    REPO_NO_CK_TRADE = 15; // Совершение сделки РЕПО без ЦК
    TAX_DEBT = 16; // Удержание задолженности по налогу с клиента
    COUPON = 17; // Выплата купонов
    DIVIDEND = 18; // Выплата дивидендов
    COUPON_TAX = 19; // Купонный налог
    DIVIDEND_TAX = 20; // Налог на дивиденды
    PARTIAL_REPAYMENT = 21; // Частичное погашение
    REPAYMENT = 22; // Полное погашение
    TAX_CORRECTION = 23; // Корректировка налога
    TAX_ACI_CORRECTION = 24; // Корректировка налога на НКД
    TAX_LUCRE_CORRECTION = 25; // Корректировка налога на материальную выгоду
    TAX_YEAR_CORRECTION = 26; // Корректировка налога по итогам года
    ADMIN_UPDATE = 27; // Изменение позиций через админку
    ADMIN_MULTI_UPDATE = 28; // Изменение нескольких позиций через админку
    MORNING_UPDATE = 29; // Событие со слепком позиций после выгрузки утренних лимитов
    OTC_CONFIRM = 30; // Подтверждение исполнения внебиржевой заявки
    CURRENCY_SWAP_SELL = 31; // Валютный своп (продажа валюты)
  }

  message ActionValue {
    Action action = 1;
  }

  // Позиция в портфеле
  message Position {

    // Тикер на бирже
    string ticker = 1;

    // Торгово-клиринговый счёт
    string trading_clearing_account = 2;

    // Актуальное кол-во единиц актива (не лоты)
    Decimal quantity = 3;

    // Действие над позицией
    ActionValue action = 4;
  }

  // Позиция базовой валюты портфеля
  message BaseMoneyPosition {

    // Актуальное кол-во единиц актива (не лоты)
    Decimal quantity = 1;
  }
}

// Торговый сигнал
message Signal {

    // Кол-во единиц актива (не лоты)
    Decimal quantity = 1;

    // Цена за одну единицу актива (в абсолютной величине)
    Decimal price = 2;
}

// Контейнер для безопасной передачи вещественного числа, обозначающего "деньги"
message Decimal {

  int64 unscaled = 1;

  int32 scale = 2;
}